bin/cassandra-cli --host localhost
create keyspace komlog;
use komlog;
create column family samples with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family sample_m with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family smp_info with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UTF8Type;

create column family dtp_values with comparator=TimeUUIDType and default_validation_class=TimeUUIDType and key_validation_class=UTF8Type;

create column family dtp_info with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UUIDType;
create column family dtp_data with comparator=DateType and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family ds_dtp_relation with comparator=UUIDType and default_validation_class=UTF8Type and key_validation_class=UUIDType;
create column family ds_data with comparator=DateType and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family ds_map with comparator=DateType and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family ds_map_vars with comparator=DateType and default_validation_class=UTF8Type and key_validation_class=UTF8Type;

create column family user_uid_relation with comparator=UUIDType and default_validation_class=UTF8Type and key_validation_class=UTF8Type;
create column family user_agent_relation with comparator=UUIDType and default_validation_class=UTF8Type and key_validation_class=UUIDType;
create column family agent_ds_relation with comparator=UUIDType and default_validation_class=UTF8Type and key_validation_class=UUIDType;

create column family ds_info with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UUIDType
and column_metadata = [
{column_name: aid, validation_class: UUIDType}
{column_name: dsname, validation_class: UTF8Type}
{column_name: last_received, validation_class: DateType}
{column_name: dstype, validation_class: UTF8Type}
{column_name: creation_date, validation_class: DateType}
{column_name: state, validation_class: IntegerType}
];

create column family user_info with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UUIDType
and column_metadata = [
{column_name: username, validation_class: UTF8Type}
{column_name: password, validation_class: UTF8Type}
{column_name: segment, validation_class: IntegerType}
{column_name: state, validation_class: IntegerType}
{column_name: creation_date, validation_class: DateType}
];

create column family agent_info with comparator=UTF8Type and default_validation_class=UTF8Type and key_validation_class=UUIDType
and column_metadata = [
{column_name: uid, validation_class: UUIDType}
{column_name: agentname, validation_class: UTF8Type}
{column_name: agentkey, validation_class: UTF8Type}
{column_name: version, validation_class: UTF8Type}
{column_name: state, validation_class: IntegerType}
];


